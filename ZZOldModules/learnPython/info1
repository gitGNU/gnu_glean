help_title="The Python core data types"

help_short="All objects are equal, but some objects are more equal than others."
help_long="Everything in Python can be called an object. Functions we write, modules we create and classes or programs are all objects. There is a list that is generally referred to as the core object list. This items in this list are effectively built into Python. \nThe objects are declared as objects through their syntax - they are context sensitive as it were. By combining characters in a specific order you create objects out of nothing.\n\nThe core list consists of:\nNumbers (123, 3.9485)\nStrings ('asthe', \"The witch's broom\", 'test')\nLists ([1, 2, 3], ['test', [34, 'hello'], 42])\nDictionaries ({'flora': 'tree', 'fauna': 'tiger'})\nTuples ((43, 'houses', 56, 'mouses'))\nFiles (myfile = open('music', 'color'))\n Sets (set('abc'), {'a', 'b', 'c'}\n\nOther core types: Booleans, types, None;\nProgram Unit types: Functions,modules, classes;\nImplementation-related types: Compiled code, stack tracebacks.\n"

#Types not implemented in levels yet: Sets, Booleans, types, None, Functions, modules, classes,
#+compiled code, stack tracebacks.
#Types that need more examples: Lists, Dictionaries, Tuples, Files.

default_question="What kind of an object is $question?" 

###############
#   OPTIONS   #
###############

shopt -s nocasematch
