;; source.scm --- glean maker source command    -*- coding: utf-8 -*-
;;
;; Copyright (C) 2014 Alex Sassmannshausen <alex.sassmannshausen@gmail.com>
;;
;; Author: Alex Sassmannshausen <alex.sassmannshausen@gmail.com>
;; Created: 26 October 2014
;;
;; This file is part of Glean.
;;
;; Glean is free software; you can redistribute it and/or modify it under the
;; terms of the GNU General Public License as published by the Free Software
;; Foundation; either version 3 of the License, or (at your option) any later
;; version.
;;
;; Glean is distributed in the hope that it will be useful, but WITHOUT ANY
;; WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
;; FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
;; details.
;;
;; You should have received a copy of the GNU General Public License along
;; with glean; if not, contact:
;;
;; Free Software Foundation           Voice:  +1-617-542-5942
;; 59 Temple Place - Suite 330        Fax:    +1-617-542-2652
;; Boston, MA  02111-1307,  USA       gnu@gnu.org

;;; Commentary:
;;
;; The `source' command enables content authors to quickly start work on their
;; discipline.  It is invoked with a value, which identifies the name of the
;; discipline to be worked upon.  If the discipline is already known within
;; the library, the source command should export that discipline and
;; anticipate that the author wants to work on a new version.  If the
;; discipline does not yet exist in the library then we create a directory and
;; with a basic file-structure named after the discipline.
;;
;; - First implementation will not check the library.
;; - Second implementation will check library and error on discipline find.
;; - Third will export discipline if found in library.
;;
;;; Code:

(define-module (glean maker source)
  #:use-module (glean common utils)
  #:use-module (ice-9 pretty-print)
  #:use-module (srfi srfi-26)
  #:export     (source))


;;;; Porcelain

(define* (source name force?)
  "Search the library for a discipline named NAME.  If it is found, export it
to the current working directory.  If it is not found, create a skeleton
discipline named NAME."
  ;; if found in library, export
  (when (and (file-exists? name) (not force?))
    (part-ways (_ "‘~a‘ already exists — not doing anything.
Use `--force' if you want to overwrite it.\n") name))
  (mkdir-p (string-append name "/aux"))
  (with-output-to-file (string-append name "/discipline.scm")
    (lambda () (discipline-template name)))
  (with-output-to-file (string-append name "/ancestry.scm")
    (lambda () (ancestry-template name))))


;;;; Templates

(define (ancestry-template name)
  (template #:filename "ancestry"
            #:summary (string-join `("the" ,name "ancestry file"))
            #:commentary
            (string-join `(";; This module defines" ,name "'s ancestry file.
;;
;; This file is auto-generated by Glean maker.  It defines data structures
;; used by module management processes.
;;
;; tree: defines the relationship between the discipline as defined in the
;; library at the time that this discipline was created.  If this is a new
;; discipline, then the tree will not refer to a previous discipline."))
            #:code
            `((define-module (glean store ,(string->symbol name) ancestry)
                #:export (tree))

              (define (tree) #f))))

(define (discipline-template name)
  (template #:filename "discipline"
            #:summary (string-join `("the" ,name "discipline"))
            #:commentary
            (string-join `(";; This module defines the" ,name "discipline."))
            #:code
            `((define-module (glean store ,(string->symbol name) discipline)
                #:use-module (glean library core-templates)
                #:export (,(string->symbol name))))))

(define* (template #:key (filename "") (summary "") (commentary "") code)
  (define tmpl
    (const ";; ~a.scm --- ~a -*- coding: utf-8 -*-
;; This file is part of Glean.
;;
;; Copyright (C) YEAR AUTHOR <EMAIL>
;; Created: DAY MONTH YEAR
;;
;; Glean is free software; you can redistribute it and/or modify it under the
;; terms of the GNU General Public License as published by the Free Software
;; Foundation; either version 3 of the License, or (at your option) any later
;; version.
;;
;; Glean is distributed in the hope that it will be useful, but WITHOUT ANY
;; WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
;; FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
;; details.
;;
;; You should have received a copy of the GNU General Public License along
;; with glean; if not, contact:
;;
;; Free Software Foundation           Voice:  +1-617-542-5942
;; 59 Temple Place - Suite 330        Fax:    +1-617-542-2652
;; Boston, MA  02111-1307,  USA       gnu@gnu.org

;;; Commentary:
;;
~a
;;
;;; Code:\n\n"))
  (format #t (tmpl) filename summary commentary
          )
  (for-each (lambda (form) (pretty-print form #:width 75) (newline)) code)
  (format #t ";;; ~a.scm ends here\n" filename))

;;; source.scm ends here
